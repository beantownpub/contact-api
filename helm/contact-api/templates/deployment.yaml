apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "contact-api.fullname" . }}
  labels:
    jke/workload: {{ include "contact-api.fullname" . }}
spec:
  progressDeadlineSeconds: 300
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      jke/workload: {{ include "contact-api.fullname" . }}
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ include "contact-api.fullname" . }}
        jke/workload: {{ include "contact-api.fullname" . }}
    spec:
      containers:
      - env:
        - name: AWS_SECRET_NAME
          value: {{ .Values.aws.secretName }}
        - name: AWS_DEFAULT_REGION
          value: {{ .Values.aws.region }}
        - name: LOG_LEVEL
          value: {{ .Values.logLevel }}

        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "contact-api.fullname" . }}
              key: AWS_ACCESS_KEY_ID

        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "contact-api.fullname" . }}
              key: AWS_SECRET_ACCESS_KEY

      - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "contact-api.fullname" . }}
              key: slack_webhook_url

      - name: SLACK_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "contact-api.fullname" . }}
              key: slack_user

      - name: SLACK_ORDERS_CHANNEL
          valueFrom:
            secretKeyRef:
              name: {{ include "contact-api.fullname" . }}
              key: slack_orders_channel

      - name: SLACK_ORDERS_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "contact-api.fullname" . }}
              key: slack_orders_webhook_url

      - name: SUPPORT_EMAIL_ADDRESS
          valueFrom:
            secretKeyRef:
              name: {{ include "contact-api.fullname" . }}
              key: support_email_address

      - name: SUPPORT_PHONE_NUMBER
          valueFrom:
            secretKeyRef:
              name: {{ include "contact-api.fullname" . }}
              key: support_phone_number

      - name: SLACK_PARTYS_CHANNEL
          valueFrom:
            secretKeyRef:
              name: {{ include "contact-api.fullname" . }}
              key: slack_partys_channel

        - name: SLACK_PARTYS_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "contact-api.fullname" . }}
              key: slack_partys_webhook_url

        - name: EMAIL_RECIPIENT
          valueFrom:
            secretKeyRef:
              name: {{ include "contact-api.fullname" . }}
              key: email_recipient

        - name: TEST_EMAIL_RECIPIENT
          valueFrom:
            secretKeyRef:
              name: {{ include "contact-api.fullname" . }}
              key: test_email_recipient


        {{- if eq .Values.global.env "dev" }}
        - name: AWS_ACCESS_KEY_ID
          value: {{ .Values.aws.accessKeyId }}
        - name: AWS_SECRET_ACCESS_KEY
          value: {{ .Values.aws.secretAccessKey }}
        {{- end }}
      {{- if eq .Values.global.env "dev" }}
        image: "contact-api:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: Never
      {{- else }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: Always
      {{- end }}
        name: contact-api
        ports:
        - containerPort: {{ .Values.containerPort }}
          name: tcp-contact-api
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        resources: {{- toYaml .Values.resources | nindent 10 }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "contact-api.serviceAccountName" . }}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
